name: Documentation

# on: [push]
workflow_run:
  workflows: ["QualityChecks"]
  type:
    - complete

jobs:
  documentation:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.8]
      fail-fast: true

    name: Python-${{ matrix.python-version }}
    steps:
      #----------------------------------------------
      #       check-out repo and set-up python
      #----------------------------------------------
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
      #----------------------------------------------
      #       Run pre-commit hooks (check notebooks are synced)
      #----------------------------------------------
    - uses: pre-commit/action@v3.0.0
      #----------------------------------------------
      #       install
      #----------------------------------------------
    - name: Install Poetry
      uses: snok/install-poetry@v1
      with:
        virtualenvs-create: true
        virtualenvs-in-project: true
      #----------------------------------------------
      #       load cached venv if cache exists
      #----------------------------------------------
    - name: Load cached venv
      id: cached-poetry-dependencies
      uses: actions/cache@v2
      with:
        path: .venv
        key: venv-${{ runner.os }}-${{ hashFiles('**/poetry.lock') }}
      #----------------------------------------------
      #       install dependencies if cache does not exist
      #----------------------------------------------
    - name: Install dependencies
      if: steps.cached-poetry-dependencies.outputs.cache-hit != 'true'
      run: poetry install --no-interaction --no-root
      #----------------------------------------------
      # install your root project, if required
      #----------------------------------------------
    - name: Install library
      run: poetry install --no-interaction
      #----------------------------------------------
      #              Install doc dependencies
      #----------------------------------------------
    - name: Run tests
      run: pip install -r docs/requirements.txt
      #----------------------------------------------
      #              run test suite
      #----------------------------------------------
    - name: Run tests
      run: poetry run task build-docs